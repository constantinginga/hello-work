@using WebApplication.Models
@using WebApplication.Data.Applications
@inject NavigationManager uriHelper;
@inject IJSRuntime jsRuntime

@inject IApplicationData ApplicationData

<button class="btn btn-outline-dark w-full btn-outline-primary" data-toggle="modal" data-target="#divCollapse@(application.Id)">
    more
</button>
<div class="modal" id="divCollapse@(application.Id)" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h2>Details</h2>
                <button type="button" class="btn close" data-dismiss="modal">
                    <i class="trashcan oi oi-circle-x" style="color: lightgray">
                    </i>
                </button>
            </div>
            <div class="modal-body">
                @if (application.Files != null)
                {
                    foreach (var file in application.Files)
                    {
                        <div class="pb-2 flex justify-center w-full">
                            <a>@file</a>
                            <button class="btn btn-outline-dark w-10/12" data-dismiss="model" @onclick="@(e => DownloadFile(file))">download</button>
                        </div>
                    }
                }

            </div>
        </div>

    </div>
</div>


@code {

    [Parameter]
    public Application application { get; set; }


    public async void DownloadFile(string file)
    {
        jsRuntime.InvokeVoidAsync("saveAsFile", file, Application.GetFile(await ApplicationData.GetFile(application.Id, file)));
    }

}