@page "/joblisting/create"
@using WebApplication.Models 
@using WebApplication.Data
@inject NavigationManager NavigationManager
@inject IJobListingData JobListingData

<body>
<EditForm Model="@jobListing" OnValidSubmit="@CreateNewJobListing">
   
    <div class="title">Create job listing</div>
    <div class="form-group">
        <div class="details">
            <div class="form-row">
                <div class="input-box">
                    <label>Job title</label>
                    <InputText class="form-control" placeholder="Job title" @bind-Value="jobListing.JobTitle"/>
                </div>
                <div class="input-box">
                    <label>Job type</label>
                    @* <InputText class="form-control" placeholder="Job Type" @bind-Value="jobListing.JobType"/> *@
                     <select class="custom-select filter-property" @onchange="@((arg) => SetJobType(arg))">
                            <option selected disabled>Select property</option>
                                        <option>@JobSchedule.ToDescription(@JobSchedule.Schedule.FullTime)</option>
                                        <option>@JobSchedule.ToDescription(@JobSchedule.Schedule.PartTime)</option>
                                        <option>@JobSchedule.ToDescription(@JobSchedule.Schedule.Internship)</option>
                                        <option>@JobSchedule.ToDescription(@JobSchedule.Schedule.Volunteering)</option>
                        </select> 
                </div>
            </div>
            <div class="form-row">
                <div class="input-box">
                    <label>Location</label>
                    <InputText class="form-control" placeholder="Location" @bind-Value="jobListing.Location"/>
                </div>
                <div class="input-box calendar">
                    <label>Deadline</label>
                    <InputDate  @bind-Value="ApplicationDate"/>
                </div>
                <div class="experience-level">
                    <label>Experience level</label>
                    <InputNumber Min="0" class="form-control" placeholder="Experience level" @bind-Value="jobListing.ExperienceLevel"/>
                </div>
            </div>
            <div class="form-row">
                <div class="input-box">
                    <label>Email</label>
                    <InputText class="form-control" placeholder="Email" @bind-Value="jobListing.Email"/>
                </div>
            
                <div class="input-box">
                    <label>Phone number</label>
                    <InputText class="form-control" placeholder="Phone Number" @bind-Value="jobListing.PhoneNumber"/>
                </div>
            </div>
            <div class="input-box">
                <label>Job requirments</label>
                @foreach (var element in jobRequirements.Select((e, i) => new {Effect = e, Index = i}))
                {
                    <p>
                        <label for="@($"effect{element.Index}")">Job Requirement @(element.Index + 1)</label>
                        <input id="@($"effect{element.Index}")" value="@element.Effect"
                               @onchange="@(e => jobRequirements[element.Index] = e.Value.ToString())"/>
                    </p>
                }
            </div>
            <div class="input-box">
                <label>Job privilleges</label>
                @foreach (var element in jobPrivilleges.Select((e, i) => new {Effect = e, Index = i}))
                {
                    <p>
                        <label for="@($"effect{element.Index}")">Job Privilleges @(element.Index + 1)</label>
                        <input id="@($"effect{element.Index}")" value="@element.Effect"
                               @onchange="@(e => jobPrivilleges[element.Index] = e.Value.ToString())"/>
                    </p>
                }
            </div>
            <button class="btn btn-dark" type="submit">Create</button>
            <DataAnnotationsValidator />
            <ValidationSummary />
        </div>
    </div>
</EditForm>
</body>

    @code {
        private JobListing jobListing = new JobListing();
        private List<string> jobRequirements = new List<string>(new string[3]);
        private List<string> jobPrivilleges = new List<string>(new string[3]);
        private DateTime ApplicationDate = DateTime.Now;

        private async void CreateNewJobListing()
        {
            jobListing.ApplicationDeadline = ApplicationDate.ToString("dd/MM/yyyy");
            jobListing.JobRequirments = jobRequirements;
            jobListing.JobPrivilleges = jobPrivilleges;
            await JobListingData.Create(jobListing);
            IList<JobListing> jbs = await JobListingData.GetJobListings();
            Console.WriteLine(jbs.Count);
            NavigationManager.NavigateTo("/");
        }

        private void SetJobType(ChangeEventArgs args)
        {
            jobListing.JobType = args.Value.ToString();
        }
    }