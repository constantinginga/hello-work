@page "/applications"
@using WebApplication.Models
@using WebApplication.Data.Applications
@using WebApplication.Auth
@using WebApplication.Pages.Comp
@using System.Linq
@using Microsoft.AspNetCore.Http.Features

@inject NavigationManager NavigationManager
@inject IApplicationData ApplicationData
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (applicationsToShow != null)
{
 <AuthorizeView Policy="JobSeeker">
    <JobSeekerApplications Applications=@applicationsToShow />
</AuthorizeView>

<AuthorizeView Policy="Employer">
    <EmployerApplications Applications=@applicationsToShow />
</AuthorizeView>   
}

@code {
    private IList<Application> applications;
    private IList<Application> applicationsToShow;
    private Application ApplicationToUpdate;
    protected override async Task OnInitializedAsync()
    {
        applications = await ApplicationData.GetApplications();
        applicationsToShow = new List<Application>();
        User currentUser = ((CustomAuthenticationStateProvider)AuthenticationStateProvider).cachedUser;
        foreach (var application in applications)
        {
            if (currentUser != null)
            {
                switch (currentUser.Role)
                {
                    case "JobSeeker":
                        if (application.employeEmail == currentUser.Email) applicationsToShow.Add(application);
                        break;
                    case "Employer":
                        if (application.employerEmail == currentUser.Email) applicationsToShow.Add(application);
                        break;
                }
            }
        }
    }

}