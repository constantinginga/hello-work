@using WebApplication.Auth
@inherits LayoutComponentBase
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="page">

    <div class="page-content">
        <div id="topbar">
            <NavMenu/>
            <AuthorizeView>
                <NotAuthorized>
                    <div>
                        <button @onclick="@(() => NavManager.NavigateTo("/login"))" class="topbar-btn"> Log In</button>
                    </div>
                </NotAuthorized>
                <Authorized>
                    <div class="dropdown">
                        <a class="dropdown-toggle dropDownLogOut" type="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @(((CustomAuthenticationStateProvider) AuthenticationStateProvider).cachedUser.Email)
                        </a>
                        <div class="dropdown-menu dropDownLogOut dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                            <a class="dropdown-item dropDownLogOut" @onclick="@(() => NavManager.NavigateTo("/profile"))" href="#">Your Profile</a>
                            <a class="dropdown-item dropDownLogOut" @onclick="Logout" href="#">Logout</a>
                        </div>
                    </div>
                </Authorized>
            </AuthorizeView>
        </div>

        <div class="hw-main-page-container">
            @Body
        </div>
    </div>
</div>

@code
{

    protected override async Task OnInitializedAsync()
    {
    }

    private void Logout()
    {
        ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
    }

}